1v
2v
3v
4f
5v
6V
7F - Mediante herencia de interfaz
8f - todas no	
9f
10f - seria Class.forName("pack.Rectangulo");
11f - es dinámico wein
12f
13f - se ejecutan siempre
14v
15f - en las operaciones de clase no, no existe receptor del mensaje ys e puede ejecutar sin necesidad de que exista ninguna instancia
16v
17f
18v
19v - porque pone qe esta sobreescrito
20v
21f
22v
23f - si, por ejemplo como cuando cambias la cláusula throws de un método público
24v
25v
26v
27f
28v
29v
30v
31	
32	
33	
34	
35
36
37
38
39
40

31. En Java, los métodos de instancia con polimorfismo puro pero no abstractos tienen enlace dinámico por defecto. [¿] V
32. En Java, un atributo de clase debe declararse dentro de la clase con el modificador static. [V]
33. En Java, gracias a la sobrecarga de operadores podemos crear nuevos operadores en el lenguaje. [F]
34. Si en una clase no se declara, implícita o explícitamente, un constructor por defecto, no se pueden crear instancias de esa clase. [V] ESTO NO ES FALSO LOCO ????
35. Una de las características básicas de un lenguajes orientado a objetos es que todos los objetos de la misma clase pueden recibir los mismo mensajes. [V]
36. La instrucción throw en Java sólo permite lanzar objetos que son instancias de la clase java.lang.Throwable o de clases derivadas de ésta. [V]
37. En Java, la instrucción throw no se puede usarn dentro de un bloque catch. [F]
38. Los métodos genéricos no se pueden sobrecargar ni sobrescribir. [F]
39. Una clase abstracta siempre tiene como clase base una clase interfaz. [F]
40. De una clase abstracta no se pueden crear instancias, excepto si se declara explícitamente algún constructor. [F]


